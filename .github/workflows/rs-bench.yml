name: Rust Criterion

on:
  workflow_dispatch:

jobs:
  bench:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Get Day
        id: get-day
        run: echo "::set-output name=day::$(seq 1 $(expr '(' $(date +%s) - $(TZ=UTC+5 date +%s --date=2020-12-01) ')' / 86400 + 1) | head -n25 | tail -n1)"
        env:
          TZ: UTC+5
      - name: Get ISO Week
        id: get-week
        run: echo "::set-output name=iso-week::$(date +%G%V%u)"
      - uses: actions/cache@v2
        with:
          key: inputs-${{ steps.get-day.outputs.day }}
          restore-keys: inputs-
          path: day*.txt
      - name: Get inputs
        run: make
        env:
          SESSION: ${{ secrets.SESSION }}
      - id: rust-toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          default: true
      - uses: actions/cache@v2
        with:
          key: ${{ runner.os }}-${{ steps.rust-toolchain.outputs.rustc_hash }}-${{ hashFiles('**/Cargo.*') }}-${{ steps.get-week.outputs.iso-week }}
          restore-keys: ${{ runner.os }}-${{ steps.rust-toolchain.outputs.rustc_hash }}-${{ hashFiles('**/Cargo.*') }}-
          path: ~/.cargo
      - name: Run cargo bench
        run: |
          cargo bench --bench criterion -- --verbose
          rsync --archive --delete --verbose --whole-file target/criterion/ ../docs/criterion/
        working-directory: rs
      - name: Inline Criterion benchmark results
        run: |
          cat >>docs/criterion/report/index.html <<'EOF'
          <script>
            document.querySelectorAll('li a[href]')
              .forEach(a => {
                let b = a.getAttribute('href');
                b = b.substr(0, b.lastIndexOf('/') + 1);
                fetch(a.href, {
                  mode: 'same-origin',
                  headers: {
                    'Accept': 'text/html'
                  }
                })
                  .then(r => r.text())
                  .then(t => new DOMParser().parseFromString(t, 'text/html'))
                  .then(d => {
                    d.querySelectorAll('[src]')
                      .forEach(e => e.setAttribute('src', `${b}${e.getAttribute('src')}`));
                    d.querySelectorAll('[href]')
                      .forEach(e => e.setAttribute('href', `${b}${e.getAttribute('href')}`));
                    a.insertAdjacentElement('afterend', d.querySelector('.body'));
                    d.querySelectorAll('style').forEach(e => document.head.append(e));
                  });
              });
          </script>
          EOF
      - uses: EndBug/add-and-commit@v5
        with:
          add: docs
          message: 'Benchmark ${{ github.sha }}'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
